<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址 -->
<mapper namespace="digitalCanteenSSM.mapper.UserMapper">

	<!-- 查询所有的用户 -->
	<select id="findAllUser" resultType="UserItems">
		SELECT * 
		FROM ctuser,ctrole,ctcant,ctcampus 
		WHERE ctuser.UserRoleID = ctrole.RoleID and
			  ctuser.UserCantID = ctcant.CantID and
			  ctuser.UserCampusID = ctcampus.CampusID
		ORDER BY UserRoleID DESC
	</select>
	
	<!-- 根据Name查询该用户的信息 -->
	<select id="findUserByName" parameterType="String" resultType="UserItems">
		SELECT * 
		FROM ctuser,ctrole
		WHERE ctuser.UserName=#{userName} and 
			ctuser.UserRoleID = ctrole.RoleID
	</select>

	<!-- 通过UserID查询用户信息 -->
	<select id="findUserByID" parameterType="Integer" resultType="UserItems">
		SELECT * 
		FROM ctuser,ctrole
		WHERE ctuser.UserID=#{userID} and 
			ctuser.UserRoleID = ctrole.RoleID
	</select>
	
	<!-- 添加用户 -->
	<select id="insertUser" parameterType="User" >
		Insert into ctuser (ctuser.UserID, ctuser.UserCantID, ctuser.UserCampusID,
							ctuser.UserRoleID, ctuser.UserName, ctuser.UserPwd,
							ctuser.UserTel, ctuser.UserSex, ctuser.UserPhoto,
							ctuser.UserGrade, ctuser.UserAcadamy, ctuser.UserClass,
							ctuser.UserEmail, ctuser.UserState, ctuser.UserRegDate,
							ctuser.UserLastDate, ctuser.UserNote)							
					values (#{userID}, #{userCantID}, #{userCampusID},
							#{userRoleID}, #{userName}, #{userPwd},
							#{userTel}, #{userSex}, #{userPhoto},
							#{userGrade}, #{userAcadamy}, #{userClass},
							#{userEmail}, #{userState}, #{userRegDate},
							#{userLastDate}, #{userNote})
	</select>
	
	<!-- 修改用户 -->
	<select id="updateUser" parameterType="User">
		UPDATE ctuser
		SET ctuser.UserCantID=#{userCantID},
			ctuser.UserCampusID=#{userCampusID},
			ctuser.UserRoleID=#{userRoleID},
			ctuser.UserName=#{userName},
			ctuser.UserPwd=#{userPwd},
			ctuser.UserTel=#{userTel},
			ctuser.UserSex=#{userSex},
			ctuser.UserPhoto=#{userPhoto},
			ctuser.UserGrade=#{userGrade},
			ctuser.UserAcadamy=#{userAcadamy},
			ctuser.UserClass=#{userClass},
			ctuser.UserEmail=#{userEmail},
			ctuser.UserState=#{userState},
			ctuser.UserRegDate=#{userRegDate},
			ctuser.UserLastDate=#{userLastDate},
			ctuser.UserNote=#{userNote}
		WHERE ctuser.UserID=#{userID}
	</select>
	
	<!-- 删除用户 -->
	<select id="deleteUserByID" parameterType="Integer">
		delete from ctuser
		where ctuser.UserID=#{userID}
	</select>
	
	<!-- 模糊查询菜品 -->
	<select id="findDishByFuzzyName" parameterType="String" resultType="DishItems">
		SELECT * 
		FROM ctdish,ctwnd,ctcant,ctcampus,ctdishtype 
		WHERE ctdish.DishName like CONCAT(CONCAT('%',#{dishName}),'%') 
		and ctdish.DishWndID = ctwnd.wndID 
		and ctwnd.WndCantID = ctcant.CantID 
		and ctcant.CantCampusID = ctcampus.CampusID
		and ctdish.DishTypeID = ctdishtype.DishTypeID
		<!-- CONCAT(CONCAT('%', #{dishName,jdbcType=VARCHAR}),'%') -->
	</select>
	
	<!-- 模糊查询档口 -->
	<select id="findWindowByFuzzyName" parameterType="String" resultType="WindowItems">
		SELECT * 
		FROM ctwnd,ctcant,ctcampus  
		WHERE ctwnd.WndName like CONCAT(CONCAT('%',#{wndName}),'%')
		and ctwnd.WndCantID = ctcant.CantID 
		and ctcant.CantCampusID = ctcampus.CampusID
		<!-- CONCAT(CONCAT('%', #{wndName,jdbcType=VARCHAR}),'%')  --> 
	</select>
</mapper>